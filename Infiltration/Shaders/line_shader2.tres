[gd_resource type="ShaderMaterial" load_steps=10 format=2]

[ext_resource path="res://Sprites/scan2.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVec3Uniform" id=1]
uniform_name = "VectorUniform"

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
uniform_name = "TextureUniform"
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=6]
constant = Vector3( 0.2, 0.3, 0 )

[sub_resource type="VisualShaderNodeVectorOp" id=7]

[sub_resource type="VisualShader" id=8]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform vec3 VectorUniform;
uniform sampler2D TextureUniform : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// VectorUniform:10
	vec3 n_out10p0 = VectorUniform;

// Input:5
	float n_out5p0 = TIME;

// VectorOp:6
	vec3 n_out6p0 = n_out10p0 * vec3(n_out5p0);

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:9
	vec3 n_out9p0 = n_out6p0 + n_out2p0;

// TextureUniform:11
	vec3 n_out11p0;
	float n_out11p1;
	{
		vec4 n_tex_read = texture(TextureUniform, n_out9p0.xy);
		n_out11p0 = n_tex_read.rgb;
		n_out11p1 = n_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out11p0;
	COLOR.a = n_out11p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -318.744, 202 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 800, 240 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -20, 440 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -80, 320 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 140, 260 )
nodes/fragment/8/node = SubResource( 6 )
nodes/fragment/8/position = Vector2( -260, 220 )
nodes/fragment/9/node = SubResource( 7 )
nodes/fragment/9/position = Vector2( 220, 400 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -160, 120 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 500, 280 )
nodes/fragment/connections = PoolIntArray( 5, 0, 6, 1, 2, 0, 9, 1, 6, 0, 9, 0, 10, 0, 6, 0, 9, 0, 11, 0, 11, 0, 0, 0, 11, 1, 0, 1 )

[resource]
resource_local_to_scene = true
shader = SubResource( 8 )
shader_param/VectorUniform = Vector3( 0, 0.2, 0 )
shader_param/TextureUniform = ExtResource( 1 )
